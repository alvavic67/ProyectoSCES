{"version":3,"sources":["serviceWorker.js","config.js","pages/login.js","components/Map.jsx","components/List.jsx","components/DialogoReporte.jsx","pages/main.js","index.js"],"names":["Boolean","window","location","hostname","match","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","app","firebase","initializeApp","db","firestore","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","Login","classes","React","useState","username","setUsername","password","setPassword","history","useHistory","signIn","a","console","log","collection","where","get","then","snapshot","docs","length","push","alert","Container","component","maxWidth","CssBaseline","className","Typography","variant","noValidate","Grid","container","item","xs","TextField","required","fullWidth","id","label","name","autoComplete","value","onChange","event","target","type","Button","color","onClick","MapContainer","state","locations","onSnapshot","response","map","doc","data","coordinates","filter","undefined","setState","google","this","props","zoom","style","height","initialCenter","lat","lng","position","_lat","_long","Component","GoogleApiWrapper","root","flexGrow","demo","background","title","InteractiveList","dense","md","List","usuarios","user","ListItem","ListItemAvatar","Avatar","src","ListItemText","primary","DialogProfessor","role","setRole","users","useEffect","Dialog","open","onClose","close","aria-labelledby","DialogTitle","DialogContent","DialogContentText","select","option","key","DialogActions","jsPDF","contenido","text","forEach","hours","day","date","save","downloadPDF","justifyContent","rightDiv","align","paddingLeft","leftDiv","borderRadius","paddingTop","routing","exact","path","setUsuarios","usuario","setOpen","lg","sm","Map","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5fbb7df9.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import firebase from \"firebase\";\n\nconst config = {\n  googlemapskey: \"AIzaSyBxcEbnw5ZjevO33SNP8gmZ0hBo6PsSi5I\",\n  firebaseConfig: {\n    apiKey: \"AIzaSyCidy5U6JSR159IaN90AmC0mFNyIZf61fY\",\n    authDomain: \"sces-4c69c.firebaseapp.com\",\n    databaseURL: \"https://sces-4c69c.firebaseio.com\",\n    projectId: \"sces-4c69c\",\n    storageBucket: \"sces-4c69c.appspot.com\",\n    messagingSenderId: \"941504175591\",\n    appId: \"1:941504175591:web:4d2811d3e09290f940b142\"\n  }\n};\n\nvar app = firebase.initializeApp(config.firebaseConfig);\nexport { config, app };\n","import React from \"react\";\n\n// import Button from \"../components/RoundedButton\";\n// import InputText from \"../components/InputText\";\n// import Card from \"../components/LoginCard\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\n\nimport { useHistory } from \"react-router-dom\";\n\nimport axios from \"axios\";\n\nimport * as config from \"../config\";\nimport \"firebase/firestore\";\nconst db = config.app.firestore();\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\n\nconst Login = () => {\n  const classes = useStyles();\n  const [username, setUsername] = React.useState(\"\");\n  const [password, setPassword] = React.useState(\"\");\n\n  let history = useHistory();\n\n  const handleUsername = event => {\n    setUsername(event.target.value);\n  };\n\n  const handlePassword = event => {\n    setPassword(event.target.value);\n  };\n\n  const signIn = async () => {\n    console.log(username);\n    console.log(password);\n\n    const response = await db\n      .collection(\"usuarios\")\n      .where(\"usuario\", \"==\", username)\n      .where(\"password\", \"==\", password)\n      .get()\n      .then(snapshot => snapshot.docs);\n\n    if (response.length != 0) {\n      history.push(\"/home\");\n    } else {\n      alert(\"Usuario y/o password incorrectos\");\n    }\n\n    // await fetch(\"http://localhost:3001/api/getUser\", {\n    //   username: username,\n    //   password: password\n    // }).then(async data => {\n    //   const response = await data.json();\n    //   if (response.success) {\n    //     console.log(response.data);\n    //     history.push(\"/home\");\n    //   } else {\n    //     console.log(\"Fail\");\n    //   }\n    // });\n  };\n\n  return (\n    <div>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <div className={classes.paper}>\n          <Typography component=\"h1\" variant=\"h5\">\n            Log in\n          </Typography>\n          <form className={classes.form} noValidate>\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  id=\"email\"\n                  label=\"Usuario\"\n                  name=\"email\"\n                  autoComplete=\"email\"\n                  value={username}\n                  onChange={handleUsername}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  name=\"password\"\n                  label=\"Contraseña\"\n                  type=\"password\"\n                  id=\"password\"\n                  autoComplete=\"current-password\"\n                  value={password}\n                  onChange={handlePassword}\n                />\n              </Grid>\n            </Grid>\n            <Button\n              type=\"button\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n              onClick={async () => await signIn()}\n            >\n              Entrar\n            </Button>\n          </form>\n        </div>\n      </Container>\n    </div>\n  );\n};\n\nexport default Login;\n","import React, { Component } from \"react\";\nimport { Map, GoogleApiWrapper, Marker } from \"google-maps-react\";\n\nimport axios from \"axios\";\n\nimport { config, app } from \"../config\";\nimport \"firebase/firestore\";\nconst db = app.firestore();\n\nclass MapContainer extends Component {\n  state = {\n    locations: []\n  };\n\n  componentDidMount() {\n    db.collection(\"usuarios\").onSnapshot(snapshot => {\n      var response = snapshot.docs.map(doc => doc.data().coordinates);\n      response = response.filter(item => item != undefined);\n      console.log(response);\n      this.setState({ locations: response });\n    });\n  }\n\n  componentWillMount() {\n    db.collection(\"usuarios\").onSnapshot(snapshot => {\n      var response = snapshot.docs.map(doc => doc.data().coordinates);\n      response = response.filter(item => item != undefined);\n      console.log(response);\n      this.setState({ locations: response });\n    });\n  }\n\n  render() {\n    const mapStyles = {\n      width: \"50%\",\n      height: \"50%\"\n    };\n    return (\n      <Map\n        google={this.props.google}\n        zoom={8}\n        style={mapStyles}\n        initialCenter={{\n          lat: 21.1761819,\n          lng: -101.6726867\n        }}\n      >\n        {/* <Marker position={{ lat: 48.0, lng: -122.0 }} /> */}\n        {this.state.locations.map(location => (\n          <Marker\n            position={{\n              lat: location._lat,\n              lng: location._long\n            }}\n          />\n        ))}\n      </Map>\n    );\n  }\n}\n\nexport default GoogleApiWrapper({\n  apiKey: config.googlemapskey\n})(MapContainer);\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\n// import FolderIcon from \"@material-ui/icons/Folder\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    maxWidth: 752\n  },\n  demo: {\n    backgroundColor: theme.palette.background.paper\n  },\n  title: {\n    margin: theme.spacing(4, 0, 2)\n  }\n}));\n\nfunction generate(element) {\n  return [0, 1, 2].map(value =>\n    React.cloneElement(element, {\n      key: value\n    })\n  );\n}\n\nexport default function InteractiveList(props) {\n  const classes = useStyles();\n  const [dense, setDense] = React.useState(false);\n  const [secondary, setSecondary] = React.useState(false);\n\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={12} md={6}>\n        <Typography variant=\"h6\" className={classes.title}>\n          {props.title}\n        </Typography>\n        <div className={classes.demo}>\n          <List dense={dense}>\n            {props.usuarios.map(user => {\n              return (\n                <ListItem>\n                  <ListItemAvatar>\n                    <Avatar src=\"https://api.adorable.io/avatars/285/alvaro.png\"></Avatar>\n                  </ListItemAvatar>\n                  <ListItemText\n                    primary={user}\n                    secondary={secondary ? \"Secondary text\" : null}\n                  />\n                </ListItem>\n              );\n            })}\n          </List>\n        </div>\n      </Grid>\n    </Grid>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport axios from \"axios\";\n\nimport jsPDF from \"jspdf\";\n\nimport * as config from \"../config\";\nimport \"firebase/firestore\";\nconst db = config.app.firestore();\n\nexport default function DialogProfessor(props) {\n  const [role, setRole] = React.useState(\"\");\n  const handleRole = event => {\n    setRole(event.target.value);\n  };\n\n  const reportes = [\"Reporte 1\", \"Reporte 2\", \"Reporte 3\", \"Ultimo reporte\"];\n  const [users, setUsers] = useState([]);\n\n  useEffect(async () => {\n    // fetch(\"http://localhost:3001/api/getReports\").then(async data => {\n    //   const reports = await data.json();\n    //   console.log(reports.data);\n    //   setUsers(reports.data);\n    // });\n\n    var response = await db\n      .collection(\"usuarios\")\n      .get()\n      .then(snapshot => snapshot.docs.map(doc => doc.data()));\n\n    console.log(response);\n  }, []);\n\n  const downloadPDF = () => {\n    var doc = new jsPDF();\n\n    let contenido = \"\";\n    doc.text(\"Reportes\", 20, 20);\n    users.forEach(user => {\n      contenido += `Nombre: ${user.name}\\nHoras:${user.hours}\\nDia:${user.day}\\nFecha:${user.date}\\n\\n`;\n    });\n    doc.text(contenido, 15, 30);\n    doc.save(\"reporte.pdf\");\n    props.close();\n  };\n\n  return (\n    <div>\n      <Dialog\n        open={props.open}\n        onClose={props.close}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">Generar Reporte</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Selecciona uno de los siguientes reportes semanales\n          </DialogContentText>\n          <TextField\n            id=\"filled-select-currency\"\n            select\n            label=\"Buscar Reporte Semanal\"\n            margin=\"normal\"\n            fullWidth\n            variant=\"filled\"\n            value={role}\n            onChange={handleRole}\n          >\n            {reportes.map(option => (\n              <option key={option} value={option}>\n                {option}\n              </option>\n            ))}\n          </TextField>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={props.close} color=\"primary\">\n            Cancelar\n          </Button>\n          <Button onClick={() => downloadPDF()}>Aceptar</Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\n\nimport Map from \"../components/Map\";\n//import Button from \"../components/Button\";\nimport List from \"../components/List\";\nimport DialogoReporte from \"../components/DialogoReporte\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\n\nimport * as config from \"../config\";\nimport \"firebase/firestore\";\nconst db = config.app.firestore();\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    // height: \"800px\",\n    // width: \"1280px\",\n    display: \"center\",\n    justifyContent: \"center\"\n  },\n  rightDiv: {\n    position: \"absolute\",\n    alignItems: \"left\",\n    align: \"right\",\n    margin: theme.spacing(2, 10, 2),\n    paddingLeft: \"700px\"\n  },\n  leftDiv: {\n    alignItems: \"right\",\n    paddingLeft: \"25px\",\n    borderRadius: \"10px\",\n    paddingTop: \"25px\"\n  }\n}));\n\nexport default function Main() {\n  const [usuarios, setUsuarios] = useState([]);\n  let history = useHistory();\n\n  useEffect(async () => {\n    // fetch(\"http://localhost:3001/api/getListUsers\").then(async data => {\n    //   const users = await data.json();\n    //   setUsuarios(users.data);\n    // });\n\n    var response = await db\n      .collection(\"usuarios\")\n      .get()\n      .then(snapshot => snapshot.docs.map(doc => doc.data().usuario));\n    console.log(response);\n    setUsuarios(response);\n  }, []);\n\n  const [open, setOpen] = React.useState(false);\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClickCancel = () => {\n    setOpen(false);\n  };\n\n  const logOut = () => {\n    history.push(\"/\");\n  };\n\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <h1 style={{ paddingLeft: \"60px\" }}>Dashboard</h1>\n      <Container maxWidth=\"lg\">\n        <Grid container>\n          <Grid\n            style={{ paddingTop: \"80px\" }}\n            item\n            lg={6}\n            sm={6}\n            xs={6}\n            className={classes.leftDiv}\n          >\n            <Map className=\"item-map\" />\n          </Grid>\n          <Grid item className={classes.rightDiv}>\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              onClick={() => handleClickOpen()}\n            >\n              Generar Reporte\n            </Button>\n            <Button\n              color=\"secondary\"\n              variant=\"contained\"\n              onClick={() => logOut()}\n            >\n              Cerrar Sesion\n            </Button>\n            <List\n              style={{ backgroundColor: \"red\" }}\n              title=\"Usuarios\"\n              className=\"item-lista\"\n              usuarios={usuarios}\n            />\n          </Grid>\n        </Grid>\n        <DialogoReporte open={open} close={handleClickCancel} />\n      </Container>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { Route, Link, BrowserRouter as Router } from \"react-router-dom\";\nimport Login from \"./pages/login\";\nimport Main from \"./pages/main\";\n\nconst routing = (\n  <Router>\n    <Route exact path=\"/\" component={Login} />\n    <Route path=\"/home\" component={Main} />\n  </Router>\n);\n\nReactDOM.render(routing, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}