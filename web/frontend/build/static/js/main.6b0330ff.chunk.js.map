{"version":3,"sources":["components/Select.jsx","pages/reporte.js","serviceWorker.js","pages/login.js","components/Map.jsx","config/config.js","components/List.jsx","pages/main.js","index.js","logo.svg"],"names":["makeStyles","theme","formControl","margin","spacing","minWidth","selectEmpty","marginTop","withStyles","root","padding","closeButton","position","right","top","color","palette","grey","props","children","classes","onClose","other","disableTypography","className","Typography","variant","IconButton","aria-label","onClick","MuiDialogContent","MuiDialogActions","Boolean","window","location","hostname","match","useStyles","paper","display","flexDirection","alignItems","avatar","backgroundColor","secondary","main","form","width","submit","Login","Container","component","maxWidth","CssBaseline","noValidate","Grid","container","item","xs","TextField","required","fullWidth","id","label","name","autoComplete","type","Button","MapContainer","google","this","zoom","style","height","initialCenter","lat","lng","Component","GoogleApiWrapper","apiKey","flexGrow","demo","background","title","InteractiveList","element","React","useState","dense","md","List","ListItem","ListItemAvatar","Avatar","ListItemText","primary","map","value","cloneElement","key","justifyContent","rightDiv","aligh","paddingLeft","leftDiv","borderRadius","paddingTop","routing","exact","path","lg","Map","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.6b0330ff.chunk.js","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\n\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  }\n}));\n\nexport default function SimpleSelect() {\n  const classes = useStyles();\n  const [age, setAge] = React.useState(\"\");\n\n  const inputLabel = React.useRef(null);\n  const [labelWidth, setLabelWidth] = React.useState(0);\n  React.useEffect(() => {\n    setLabelWidth(inputLabel.current.offsetWidth);\n  }, []);\n\n  const handleChange = event => {\n    setAge(event.target.value);\n  };\n\n  return (\n    <FormControl variant=\"outlined\" className={classes.formControl}>\n      <InputLabel ref={inputLabel} id=\"demo-simple-select-outlined-label\">\n        Age\n      </InputLabel>\n      <Select\n        labelId=\"demo-simple-select-outlined-label\"\n        id=\"demo-simple-select-outlined\"\n        value={age}\n        onChange={handleChange}\n        labelWidth={labelWidth}\n      >\n        <MenuItem value=\"\">\n          <em>None</em>\n        </MenuItem>\n        <MenuItem value={10}>Ten</MenuItem>\n        <MenuItem value={20}>Twenty</MenuItem>\n        <MenuItem value={30}>Thirty</MenuItem>\n      </Select>\n    </FormControl>\n  );\n}\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\nimport IconButton from \"@material-ui/core/IconButton\";\n// import CloseIcon from \"@material-ui/icons/Close\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport Select from \"../components/Select\";\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2)\n  },\n  closeButton: {\n    position: \"absolute\",\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500]\n  }\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton\n          aria-label=\"close\"\n          className={classes.closeButton}\n          onClick={onClose}\n        >\n          {/* <CloseIcon /> */}\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2)\n  }\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1)\n  }\n}))(MuiDialogActions);\n\nexport default function CustomizedDialogs(props) {\n  const [open, setOpen] = React.useState(true);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <Dialog\n      onClose={handleClose}\n      aria-labelledby=\"customized-dialog-title\"\n      open={open}\n    >\n      <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n        {props.title}\n      </DialogTitle>\n      <DialogContent dividers>\n        <Typography gutterBottom>{props.description}</Typography>\n        <Select />\n      </DialogContent>\n      <DialogActions>\n        <Button autoFocus onClick={handleClose} color=\"primary\">\n          {props.action}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\n\n// import Button from \"../components/RoundedButton\";\n// import InputText from \"../components/InputText\";\n// import Card from \"../components/LoginCard\";\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nconst Login = () => {\n  const classes = useStyles();\n  return (\n    <div>\n      <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Typography component=\"h1\" variant=\"h5\">\n          Log in\n        </Typography>\n        <form className={classes.form} noValidate>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Usuario\"\n                name=\"email\"\n                autoComplete=\"email\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Contraseña\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Entrar\n          </Button>\n        </form>\n      </div>\n    </Container>\n    </div>\n  );\n};\n\nexport default Login;\n","import React, { Component } from \"react\";\nimport { Map, GoogleApiWrapper, Marker } from \"google-maps-react\";\nimport { config } from \"../config/config\";\n\nclass MapContainer extends Component {\n  render() {\n    const mapStyles = {\n      width: \"50%\",\n      height: \"50%\"\n    };\n    return (\n      <Map\n        google={this.props.google}\n        zoom={8}\n        style={mapStyles}\n        initialCenter={{ lat: 47.444, lng: -122.176 }}\n      >\n        <Marker position={{ lat: 48.0, lng: -122.0 }} />\n      </Map>\n    );\n  }\n}\n\nexport default GoogleApiWrapper({\n  apiKey: config.googlemapskey\n})(MapContainer);\n","export const config = {\n  googlemapskey: \"AIzaSyBxcEbnw5ZjevO33SNP8gmZ0hBo6PsSi5I\"\n};\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\n// import FolderIcon from \"@material-ui/icons/Folder\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    maxWidth: 752\n  },\n  demo: {\n    backgroundColor: theme.palette.background.paper\n  },\n  title: {\n    margin: theme.spacing(4, 0, 2)\n  }\n}));\n\nfunction generate(element) {\n  return [0, 1, 2].map(value =>\n    React.cloneElement(element, {\n      key: value\n    })\n  );\n}\n\nexport default function InteractiveList(props) {\n  const classes = useStyles();\n  const [dense, setDense] = React.useState(false);\n  const [secondary, setSecondary] = React.useState(false);\n\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={12} md={6}>\n        <Typography variant=\"h6\" className={classes.title}>\n          {props.title}\n        </Typography>\n        <div className={classes.demo}>\n          <List dense={dense}>\n            {generate(\n              <ListItem>\n                <ListItemAvatar>\n                  <Avatar>{/* <FolderIcon /> */}</Avatar>\n                </ListItemAvatar>\n                <ListItemText\n                  primary=\"Single-line item\"\n                  secondary={secondary ? \"Secondary text\" : null}\n                />\n              </ListItem>\n            )}\n          </List>\n        </div>\n      </Grid>\n    </Grid>\n  );\n}\n","import React from \"react\";\n\nimport Map from \"../components/Map\";\n//import Button from \"../components/Button\";\nimport List from \"../components/List\";\n\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: \"100vh\",\n    display: \"center\",\n    justifyContent: \"center\",\n  },\n  rightDiv: {\n    alignItems: \"right\",\n    aligh: \"right\",\n    margin: theme.spacing(2, 0, 2),\n    paddingLeft: \"150px\",\n  },\n  leftDiv: {\n    paddingLeft: \"25px\",\n    borderRadius: \"10px\",\n    paddingTop: \"25px\"\n  }\n}));\n\nexport default function Main() {\n  const classes = useStyles();\n  return ( \n    <div className={classes.root}>\n      <Container maxWidth=\"lg\">\n        <Grid container>\n          <Grid item lg={6} className={classes.leftDiv}>\n            <Map className=\"item-map\" />\n          </Grid>\n          <Grid item lg={6} className={classes.rightDiv}>\n            <Button>Generar Reporte</Button>\n            <Button>Cerrar Sesion</Button>\n            <List title=\"Usuarios\" className=\"item-lista\" />\n          </Grid>\n        </Grid>\n      </Container>\n    </div >\n  );\n};","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { Route, Link, BrowserRouter as Router } from \"react-router-dom\";\nimport Login from \"./pages/login\";\nimport Main from \"./pages/main\";\n\nconst routing = (\n  <Router>\n    <Route exact path=\"/login\" component={Login} />\n    <Route path=\"/home\" component={Main} />\n  </Router>\n);\n\nReactDOM.render(routing, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";"],"sourceRoot":""}